# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu kickoff

### Output configuration
#
# Default wallpaper (more resolutions are available in /run/current-system/sw/share/backgrounds/sway/)
output * bg /run/current-system/sw/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # FOCUS ON URGENT WINDOW
    #focus_on_window_activation focus
#    bindsym $mod+i exec swaymsg 'workspace $(swaymsg -t get_tree | jq '.. | objects | select(.urgent==true).name' | tr -d '"')'

    bindsym $mod+i exec swaymsg "workspace $(swaymsg -t get_tree | jq '.. | objects | select(.urgent==true).name' | grep -oP '\b\d+\b' | head -n1)"

    # Kill focused window
    bindsym $mod+Shift+c kill

    # Start your launcher
    bindsym $mod+p exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'


    # Lightness
    bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym XF86MonBrightnessUp exec brightnessctl set 5%+

    bindsym XF86AudioRaiseVolume exec pulsemixer --change-volume +5
    bindsym XF86AudioLowerVolume exec pulsemixer --change-volume -5
    bindsym XF86AudioMute exec pulsemixer --toggle-mute
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindsym $mod+u workspace number 11
    bindsym $mod+d workspace number 12
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    bindsym $mod+Shift+u move container to workspace number 11
    bindsym $mod+Shift+d move container to workspace number 12
    bindsym $mod+Shift+Cyrillic_ghe move container to workspace number 11
    bindsym $mod+Shift+Cyrillic_ve move  to workspace number 12
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show


#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

mode "screenshot" {
    bindsym s exec grim -g "$(slurp)"  ~/Pictures/Screenshot/$( date +%d-%m-%y-%T.jpg)
    bindsym c exec grim -g "$(slurp)" -  | wl-copy

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+s mode "screenshot"

mode "redshift" {
    bindsym k exec gammastep -O 3000
    bindsym j exec gammastep -x; gammastep -x
    bindsym 0 exec gammastep -x 
    bindsym 1 exec gammastep -O 1000
    bindsym 2 exec gammastep -O 1500
    bindsym 3 exec gammastep -O 2000
    bindsym 4 exec gammastep -O 2500
    bindsym 5 exec gammastep -O 3000
    bindsym 6 exec gammastep -O 3500
    bindsym 7 exec gammastep -O 4500
    bindsym 8 exec gammastep -O 5000
    bindsym 9 exec gammastep -O 5500

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+ctrl+r mode "redshift"




# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.

bar { 
     swaybar_command waybar -c ~/.config/waybar/config
}


include /etc/sway/config.d/*

default_border pixel 2
#for_window [title="^.*"] title_format ""
#default_floating_border normal 0



input "1267:12553:ELAN2204:00_04F3:3109_Touchpad" {
    dwt enabled
    tap enabled
    middle_emulation enabled
    pointer_accel 0.7
    accel_profile adaptive
}

input "1267:12553:ELAN2204:00_04F3:3109_Mouse" {
    pointer_accel 0.7
    accel_profile adaptive
}

input type:keyboard {
    xkb_layout us,ru
    #xkb_layout us,ru
    xkb_options grp:rctrl_toggle
}





#input "1386:890:Wacom_One_by_Wacom_S_Pen" map_to_output HDMI-A-1
input "1386:890:Wacom_One_by_Wacom_S_Pen" map_to_output eDP-1 

# HDMI-A-1 eDP-1 


#output * background  /space/Pictures/Wallpapers/magent.png fill
output * background  /space/Pictures/Wallpapers/masha_mandala.jpg fill


output HDMI-A-1 pos 0 0
output eDP-1 pos 0 1080


set $background		   #282420
set $foreground            #e5c6a8
set $cursor                #f6f6ec
set $selection_background  #111417
set $color0                #111417
set $color8                #665e54
set $color1                #c84134
set $color9                #ff6459
set $color2                #84c44b
set $color10               #97e035
set $color3                #f4ae2e
set $color11               #dfd561
set $color4                #1397b9
set $color12               #5ed9ff
set $color5                #d0623c
set $color13               #ff9168
set $color6                #4f9452
set $color14               #83ef88
set $color7                #e5c5a9
set $color15               #f6f6ec
set $selection_foreground #282420


set $active   #6f5f5f
set $inactive #282420
set $urgent   #d0623c
set $mess     $color7
set $back     #6f5f5f
set $fg       #e5c5a9
## Window decoration
# class                 border		backgr	       text      indicator     child_border
client.focused           $back  	$back          $fg       $back         $back
client.focused_inactive         $inactive 	$inactive      $fg       $inactive     $inactive
client.unfocused         $inactive 	$inactive      $fg       $inactive     $inactive
client.urgent            $urgent     	$back          $fg       $color9       $fg
client.placeholder       $mess     	$back          $fg       $color7       $fg
client.background        $mess

# client.focused           $base     $base $text  $mauve $base
# client.focused_inactive  $base       $base $text  $base $base
# client.unfocused         $base        $base $text  $base $base
# client.urgent            $peach        $base $peach $overlay0  $peach
# client.placeholder       $base     $base $text  $overlay0  $base
# client.background        $base

# client.focused           $mauve    $base $text  $lavender $mauve
# client.focused_inactive  $mantle       $base $text  $mantle $mantle
# client.unfocused         $mantle        $base $text  $mantle $mantle
# client.urgent            $peach        $base $peach $overlay0  $peach
# client.placeholder       $base     $base $text  $overlay0  $overlay0
# client.background        $base
# client.focused           $mauve    $base $text  $lavender $mauve


### TRANSPARENTCY COMPOSITING

set $opacity 0.90
#for_window [class=".*"] opacity $opacity
for_window [app_id="kitty"] opacity $opacity
for_window [app_id="org.pwmt.zathura"] opacity $opacity
for_window [app_id="sioyek"] opacity $opacity
for_window [class="PatchWindow"] opacity 0.5


focus_follows_mouse yes
